{"ast":null,"code":"var _jsxFileName = \"/Users/elmaraliyev/Development/sygnio-b/web/pages/blog.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\n\nconst Blog = props => {\n  const {\n    posts = []\n  } = props;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Welcome to a blog!\"), posts.map(({\n    _id,\n    title = \"\",\n    slug = \"\",\n    _updatedAt = \"\"\n  }) => slug && __jsx(\"li\", {\n    key: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: `/post/${slug.current}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, title)), \" \", \"(\", new Date(_updatedAt).toDateString(), \")\")));\n};\n\nBlog.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Blog;","map":{"version":3,"sources":["/Users/elmaraliyev/Development/sygnio-b/web/pages/blog.js"],"names":["Link","groq","client","Blog","props","posts","map","_id","title","slug","_updatedAt","current","Date","toDateString","getInitialProps","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGC,KAAK,CAACC,GAAN,CACC,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,EAAf;AAAmBC,IAAAA,IAAI,GAAG,EAA1B;AAA8BC,IAAAA,UAAU,GAAG;AAA3C,GAAD,KACED,IAAI,IACF;AAAI,IAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,SAAQE,IAAI,CAACE,OAAQ,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,CADF,CADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ,MAHL,CAFH,CADF;AAgBD,CAlBD;;AAoBAV,IAAI,CAACW,eAAL,GAAuB,aAAa;AAClCT,EAAAA,KAAK,EAAE,MAAMH,MAAM,CAACa,KAAP,CAAad,IAAK;;KAAlB;AADqB,CAAb,CAAvB;;AAMA,eAAeE,IAAf","sourcesContent":["import Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\n\nconst Blog = props => {\n  const { posts = [] } = props;\n  return (\n    <div>\n      <h1>Welcome to a blog!</h1>\n      {posts.map(\n        ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\n          slug && (\n            <li key={_id}>\n              <Link href='/post/[slug]' as={`/post/${slug.current}`}>\n                <a>{title}</a>\n              </Link>{\" \"}\n              ({new Date(_updatedAt).toDateString()})\n            </li>\n          )\n      )}\n    </div>\n  );\n};\n\nBlog.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}