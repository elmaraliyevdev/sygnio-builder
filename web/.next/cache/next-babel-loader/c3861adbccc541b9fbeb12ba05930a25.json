{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/elmaraliyev/Development/sygnio-b/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n  title,\\n  \\\"name\\\": author->name,\\n  \\\"categories\\\": categories[]->title,\\n  \\\"authorImage\\\": author->image\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport groq from \"groq\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../client\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nvar Post = function Post(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? \"Missing title\" : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? \"Missing name\" : _props$name,\n      categories = props.categories,\n      authorImage = props.authorImage;\n  return __jsx(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, title), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"By \", name), categories && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Posted in\", categories.map(function (category) {\n    return __jsx(\"li\", {\n      key: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, category);\n  })), authorImage && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: urlFor(authorImage).width(50).url(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nvar query = groq(_templateObject());\n\nPost.getInitialProps = function _callee(context) {\n  var _context$query$slug, slug;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // It's important to default the slug so that it doesn't return \"undefined\"\n          _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.fetch(query, {\n            slug: slug\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/elmaraliyev/Development/sygnio-b/web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","client","urlFor","source","image","Post","props","title","name","categories","authorImage","map","category","width","url","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAOH,eAAe,CAACC,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAAA,qBAMhBA,KANgB,CAElBC,KAFkB;AAAA,MAElBA,KAFkB,6BAEV,eAFU;AAAA,oBAMhBD,KANgB,CAGlBE,IAHkB;AAAA,MAGlBA,IAHkB,4BAGX,cAHW;AAAA,MAIlBC,UAJkB,GAMhBH,KANgB,CAIlBG,UAJkB;AAAA,MAKlBC,WALkB,GAMhBJ,KANgB,CAKlBI,WALkB;AAOpB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFF,EAGGC,UAAU,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGA,UAAU,CAACE,GAAX,CAAe,UAAAC,QAAQ;AAAA,WACtB;AAAI,MAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,QAApB,CADsB;AAAA,GAAvB,CAFH,CAJJ,EAWGF,WAAW,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAER,MAAM,CAACQ,WAAD,CAAN,CACFG,KADE,CACI,EADJ,EAEFC,GAFE,EADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZJ,CADF;AAuBD,CA9BD;;AAgCA,IAAMC,KAAK,GAAGhB,IAAH,mBAAX;;AAOAM,IAAI,CAACW,eAAL,GAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB;AADqB,gCAECA,OAAO,CAACF,KAFT,CAEbG,IAFa,EAEbA,IAFa,oCAEN,EAFM;AAAA;AAAA,2CAGRjB,MAAM,CAACkB,KAAP,CAAaJ,KAAb,EAAoB;AAC/BG,YAAAA,IAAI,EAAJA;AAD+B,WAApB,CAHQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeb,IAAf","sourcesContent":["import groq from \"groq\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../client\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  const {\n    title = \"Missing title\",\n    name = \"Missing name\",\n    categories,\n    authorImage\n  } = props;\n  return (\n    <article>\n      <h1>{title}</h1>\n      <span>By {name}</span>\n      {categories && (\n        <ul>\n          Posted in\n          {categories.map(category => (\n            <li key={category}>{category}</li>\n          ))}\n        </ul>\n      )}\n      {authorImage && (\n        <div>\n          <img\n            src={urlFor(authorImage)\n              .width(50)\n              .url()}\n          />\n        </div>\n      )}\n    </article>\n  );\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image\n}`;\n\nPost.getInitialProps = async function(context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}