{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/elmaraliyev/Development/sygnio-b/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from \"../../client\";\n\nvar Post = function Post(props) {\n  return __jsx(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.slug.current));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var _context$query$slug, slug;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // It's important to default the slug so that it doesn't return \"undefined\"\n          _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.fetch(\"\\n    *[_type == \\\"post\\\" && slug.current == $slug][0]\\n  \", {\n            slug: slug\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/elmaraliyev/Development/sygnio-b/web/pages/post/[slug].js"],"names":["client","Post","props","slug","current","getInitialProps","context","query","fetch"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AACpB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,OAAhB,CADF,CADF;AAKD,CAND;;AAQAH,IAAI,CAACI,eAAL,GAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB;AADqB,gCAECA,OAAO,CAACC,KAFT,CAEbJ,IAFa,EAEbA,IAFa,oCAEN,EAFM;AAAA;AAAA,2CAGRH,MAAM,CAACQ,KAAP,+DAIX;AAAEL,YAAAA,IAAI,EAAJA;AAAF,WAJW,CAHQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWA,eAAeF,IAAf","sourcesContent":["import client from \"../../client\";\n\nconst Post = props => {\n  return (\n    <article>\n      <h1>{props.slug.current}</h1>\n    </article>\n  );\n};\n\nPost.getInitialProps = async function(context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query;\n  return await client.fetch(\n    `\n    *[_type == \"post\" && slug.current == $slug][0]\n  `,\n    { slug }\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}