{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/elmaraliyev/Development/sygnio-b/web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      *[_type == \\\"post\\\" && publishedAt < now()]|order(publishedAt desc)\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\n\nvar Index = function Index(props) {\n  var _props$posts = props.posts,\n      posts = _props$posts === void 0 ? [] : _props$posts;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Welcome to a blog!\"), posts.map(function (_ref) {\n    var _id = _ref._id,\n        _ref$title = _ref.title,\n        title = _ref$title === void 0 ? \"\" : _ref$title,\n        _ref$slug = _ref.slug,\n        slug = _ref$slug === void 0 ? \"\" : _ref$slug,\n        _ref$_updatedAt = _ref._updatedAt,\n        _updatedAt = _ref$_updatedAt === void 0 ? \"\" : _ref$_updatedAt;\n\n    return slug && __jsx(\"li\", {\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/post/[slug]\",\n      as: \"/post/\".concat(slug.current),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, title)), \" \", \"(\", new Date(_updatedAt).toDateString(), \")\");\n  }));\n};\n\nIndex.getInitialProps = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.fetch(groq(_templateObject())));\n\n        case 2:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: _context.t0\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/elmaraliyev/Development/sygnio-b/web/pages/index.js"],"names":["Link","groq","client","Index","props","posts","map","_id","title","slug","_updatedAt","current","Date","toDateString","getInitialProps","fetch"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,qBACEA,KADF,CACbC,KADa;AAAA,MACbA,KADa,6BACL,EADK;AAErB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGA,KAAK,CAACC,GAAN,CACC;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,0BAAQC,KAAR;AAAA,QAAQA,KAAR,2BAAgB,EAAhB;AAAA,yBAAoBC,IAApB;AAAA,QAAoBA,IAApB,0BAA2B,EAA3B;AAAA,+BAA+BC,UAA/B;AAAA,QAA+BA,UAA/B,gCAA4C,EAA5C;;AAAA,WACED,IAAI,IACF;AAAI,MAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,kBAAWE,IAAI,CAACE,OAAhB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,KAAJ,CADF,CADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ,MAFJ;AAAA,GADD,CAFH,CADF;AAgBD,CAlBD;;AAoBAV,KAAK,CAACW,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACTZ,MAAM,CAACa,KAAP,CAAad,IAAb,oBADS;;AAAA;AAAA;AAAA;AACtBI,YAAAA,KADsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAMA,eAAeF,KAAf","sourcesContent":["import Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\n\nconst Index = props => {\n  const { posts = [] } = props;\n  return (\n    <div>\n      <h1>Welcome to a blog!</h1>\n      {posts.map(\n        ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\n          slug && (\n            <li key={_id}>\n              <Link href='/post/[slug]' as={`/post/${slug.current}`}>\n                <a>{title}</a>\n              </Link>{\" \"}\n              ({new Date(_updatedAt).toDateString()})\n            </li>\n          )\n      )}\n    </div>\n  );\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}