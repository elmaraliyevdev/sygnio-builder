{"ast":null,"code":"var _jsxFileName = \"/Users/elmaraliyev/Development/sygnio-b/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport groq from \"groq\";\nimport client from \"../client\";\n\nconst Post = props => {\n  const {\n    title = \"Missing title\",\n    name = \"Missing name\",\n    categories\n  } = props;\n  return __jsx(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, title), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"By \", name), categories && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Posted in\", categories.map(category => __jsx(\"li\", {\n    key: category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, category))));\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title\n}`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/elmaraliyev/Development/sygnio-b/web/pages/post/[slug].js"],"names":["groq","client","Post","props","title","name","categories","map","category","query","getInitialProps","context","slug","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA,KAAK,GAAG,eAAV;AAA2BC,IAAAA,IAAI,GAAG,cAAlC;AAAkDC,IAAAA;AAAlD,MAAiEH,KAAvE;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFF,EAGGC,UAAU,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGA,UAAU,CAACC,GAAX,CAAeC,QAAQ,IACtB;AAAI,IAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBA,QAApB,CADD,CAFH,CAJJ,CADF;AAcD,CAhBD;;AAkBA,MAAMC,KAAK,GAAGT,IAAK;;;;EAAnB;;AAMAE,IAAI,CAACQ,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMR,MAAM,CAACY,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJD;;AAMA,eAAeV,IAAf","sourcesContent":["import groq from \"groq\";\nimport client from \"../client\";\n\nconst Post = props => {\n  const { title = \"Missing title\", name = \"Missing name\", categories } = props;\n  return (\n    <article>\n      <h1>{title}</h1>\n      <span>By {name}</span>\n      {categories && (\n        <ul>\n          Posted in\n          {categories.map(category => (\n            <li key={category}>{category}</li>\n          ))}\n        </ul>\n      )}\n    </article>\n  );\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title\n}`;\n\nPost.getInitialProps = async function(context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query;\n  return await client.fetch(query, { slug });\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}