{"version":3,"file":"static/webpack/static/development/pages/blog.js.f29d82a6a8c31be08e25.hot-update.js","sources":["webpack:///./pages/blog.js"],"sourcesContent":["import React from \"react\";\nimport BaseLayout from \"../components/layouts/BaseLayout\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Menu from \"../components/shared/Menu\";\nimport Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\n\nconst Blog = props => {\n  const { posts = [] } = props;\n  return (\n    <BaseLayout>\n      <div className='blog-menu'>\n        <Container>\n          <Row>\n            <Col sm='12'>\n              <Menu />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <section className='p-50'>\n        <Container>\n          <Row>\n            <Col sm='12'>\n              <h2 className='ml-30'>Blog</h2>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm='12'>\n              {posts.map(\n                ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\n                  slug && (\n                    <li key={_id}>\n                      <Link href='/post/[slug]' as={`/post/${slug.current}`}>\n                        <a>{title}</a>\n                      </Link>{\" \"}\n                      ({new Date(_updatedAt).toDateString()})\n                    </li>\n                  )\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </section>\n      <Container>\n        <Row>\n          <Col md='8'></Col>\n          <Col md='4'></Col>\n        </Row>\n      </Container>\n    </BaseLayout>\n  );\n};\n\nBlog.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Blog;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}